diff --git a/app/src/main/assets/hall9.svg b/app/src/main/assets/hall9.svg
index 254924b..85f8383 100644
--- a/app/src/main/assets/hall9.svg
+++ b/app/src/main/assets/hall9.svg
@@ -289,7 +289,7 @@
           width="55.101006"
           id="rect4961.17"
           style="display:inline;fill:#da3636;fill-opacity:1;stroke:#000000;stroke-width:2.01184581;stroke-miterlimit:4;stroke-dasharray:none;stroke-opacity:1" />
-      <text x="960" y="155" font-family="Arial" font-size="17" fill="black" stroke-width="0" > 961.17</text>
+      <text x="960" y="155" font-family="Arial" font-size="17" fill="black" stroke-width="0" > 961.17 </text>
       <rect
           y="48.342255"
           x="921.25909"
diff --git a/app/src/main/java/com/droidhats/mapprocessor/ProcessMap.kt b/app/src/main/java/com/droidhats/mapprocessor/ProcessMap.kt
index c47e666..4f27755 100644
--- a/app/src/main/java/com/droidhats/mapprocessor/ProcessMap.kt
+++ b/app/src/main/java/com/droidhats/mapprocessor/ProcessMap.kt
@@ -179,58 +179,48 @@ class ProcessMap {
         val originalSVG: List<String> = svg.split("\n")
         var svgArray = mutableListOf<String>()
 
-        if (floorNumber == numBuilding) {
-            newFileStr = svg
-        }
-        if (floorNumber != numBuilding) {
-            //Add all of the svg in the
-            for (line in originalSVG) {
-                if (FloorFragment.settingsOff.isNotEmpty()) {
-                    if (line.contains("id=\"") && checkArrayForLine(FloorFragment.settingsOff, line)) {
-                            svgArray.add(line.replace(">", "display=\"none\">"))
-                    } else {
-                        svgArray.add(line)
-                    }
-                } else  {
+        //Add all of the svg in the
+        for (line in originalSVG) {
+            if (FloorFragment.settingsOff.isNotEmpty()) {
+                if (line.contains("id=\"") && checkArrayForLine(FloorFragment.settingsOff, line)) {
+                    svgArray.add(line.replace(">", "display=\"none\">"))
+                } else {
                     svgArray.add(line)
                 }
+            } else  {
+                svgArray.add(line)
             }
+        }
 
-            for (i in svgArray) {
-                var resultText = patternText.containsMatchIn(i)
-                var resultDocName = patternDocName.containsMatchIn(i)
+        for (i in svgArray) {
+            val resultText = patternText.containsMatchIn(i)
+            val resultDocName = patternDocName.containsMatchIn(i)
 
-                if (!resultText && !resultDocName) {
-                    newFileStr += i + "\n"
-                    continue
-                }
-                if (resultText) {
-                    var textArray = i.split("> ")
-                    var str = textArray[1].split(" </")
-                    var roomNum = str[0]
-                    var roomNumRegex = Regex(numBuilding)
-                    var newFloor = roomNumRegex.replaceFirst(roomNum, floorNumber)
-                    var newTextTag =
-                        "${textArray.elementAt(0)}" + "> " + "$newFloor" + " </" + "${str.elementAt(
-                            1
-                        )}"
-                    newFileStr += newTextTag + "\n"
-                }
-                if (resultDocName) {
-                    var textArray = i.split("-")
-                    var str = textArray[1].split(".")
-                    var docNum = str[0]
-                    var docNumRegex = Regex(numBuilding)
-                    var newDocNum = docNumRegex.replaceFirst(docNum, floorNumber)
-                    var newDocTag =
-                        "${textArray.elementAt(0)}" + "-" + "$newDocNum" + "." + "${str.elementAt(
-                            1
-                        )}"
-                    newFileStr += newDocTag + "\n"
-                }
+            if (!resultText && !resultDocName) {
+                newFileStr += i + "\n"
+                continue
+            }
+            if (resultText) {
+                val textArray = i.split("> ")
+                val str = textArray[1].split(" </")
+                val roomNum = str[0]
+                val roomNumRegex = Regex(numBuilding)
+                val newFloor = roomNumRegex.replaceFirst(roomNum, floorNumber)
+                val newTextTag =
+                    textArray.elementAt(0) + "> " + "$newFloor" + " </" + str.elementAt(1)
+                newFileStr += newTextTag + "\n"
+            }
+            if (resultDocName) {
+                val textArray = i.split("-")
+                val str = textArray[1].split(".")
+                val docNum = str[0]
+                val docNumRegex = Regex(numBuilding)
+                val newDocNum = docNumRegex.replaceFirst(docNum, floorNumber)
+                val newDocTag =
+                    textArray.elementAt(0) + "-" + "$newDocNum" + "." + str.elementAt(1)
+                newFileStr += newDocTag + "\n"
             }
         }
-
         return newFileStr
     }
 
